@model gis_final.Models.UserRoles

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>UserRoles</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="UserId" />
            <input type="hidden" asp-for="RoleId" />
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="View" /> @Html.DisplayNameFor(model => model.View)
                </label>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Create" /> @Html.DisplayNameFor(model => model.Create)
                </label>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Update" /> @Html.DisplayNameFor(model => model.Update)
                </label>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Delete" /> @Html.DisplayNameFor(model => model.Delete)
                </label>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Confirm" /> @Html.DisplayNameFor(model => model.Confirm)
                </label>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
